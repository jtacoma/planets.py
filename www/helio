#!/usr/bin/env python
#
# Copyright (c) 2011 Joshua Tacoma
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import cgi
import datetime
import json
import math
import os
import sys

import cgitb
cgitb.enable()

import swisseph as swe

def getinfo(jd, span):

    flags = swe.FLG_HELCTR | swe.FLG_SWIEPH | swe.FLG_SPEED

    info = []
    for off in range(span):
        keys = ['lon', 'lat', 'dist', 'lons', 'lats', 'dists']
        bodies = {}
        jd_off = jd + off
        for sweph_id in range(23):
            values = swe.calc_ut(jd_off, sweph_id, flags)
            body = dict(zip(keys, values))
            body['sweph_id'] = sweph_id
            bodies[sweph_id] = body
        info.append({
            'jd' : jd_off,
            'bodies'  : bodies,
        })

    swe.close()

    return info

def main():
    form = cgi.FieldStorage()
    # date:
    date_raw = form.getfirst('d', datetime.datetime.now().isoformat().split('T')[0])
    date = datetime.datetime.strptime(date_raw, '%Y-%m-%d')
    jd = swe.julday(date.year, date.month, date.day, date.hour)
    # span:
    span = int(form.getfirst('s', 1))
    # callback:
    callback = form.getfirst('callback')
    # work:
    data = json.dumps(getinfo(jd, span))
    js = callback and '%s(%s);' % (callback, data) or data
    content_type = callback and 'application/javascript' or 'application/json'
    # output:
    print 'Content-type: ' + content_type
    print
    print js

if __name__ == '__main__':
    main()
